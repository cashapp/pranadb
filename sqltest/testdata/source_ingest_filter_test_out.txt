--create topic testtopic;
use test;
0 rows returned
create source test_source_1(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp,
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    ingestfilter = "col0 > 1 and col1 < 100 and col2 > 2000 and col3 < 8234.4321 and col4 > 32345678.99 and col5 < 'str7'",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    )
);
0 rows returned

--load data dataset_1;

select * from test_source_1 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.000000 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.000000 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.000000 |
+---------------------------------------------------------------------------------------------------------------------+
3 rows returned

drop source test_source_1;
0 rows returned

--delete topic testtopic;

-- some failing filters;

--create topic testtopic;
use test;
0 rows returned
create source test_source_1(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp,
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    ingestfilter = "wtf is this?",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    )
);
Failed to execute statement: PDB1000 - invalid ingest filter "wtf is this?"
--delete topic testtopic;
