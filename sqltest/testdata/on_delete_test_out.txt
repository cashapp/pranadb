--cluster only;

-- This script tests that data created during a failed 'create materialized view' gets deleted from the database after;
-- failure and restart;

--create topic testtopic;
use test;
0 rows returned
create source test_source_1(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp(6),
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    ),
    properties = (
        "prop1" = "val1",
        "prop2" = "val2"
    )
);
0 rows returned

--load data dataset_1;

select * from test_source_1 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 1                    | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 2                    | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 3                    | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 7                    | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 8                    | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 9                    | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 10                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
+---------------------------------------------------------------------------------------------------------------------+
10 rows returned

-- trigger a failure after a new MV has been filled but before it's been persisted to the tables table;
-- in this case. The data in the MV should be deleted on restart after failure;

--activate failpoint create_mv_1 -1;

create materialized view test_mv_1 as select * from test_source_1;
Failed to execute statement: PDB5000 - Internal error - reference: 649cc908-35f5-4764-aaff-b39daead1a05 please consult server logs for details

--deactivate failpoint create_mv_1 -1;
--restart cluster;

use test;
0 rows returned

-- MV shouldn't exist;
select * from test_mv_1;
Failed to execute statement: PDB1000 - Table 'test.test_mv_1' doesn't exist

-- trigger a failure after MV has been filled and persisted to storage but before to_delete rows have been removed;
-- at the end of the create MV process. In this case the MV should exist after restart with all it's data as we don't delete from the;
-- to_delete table if the table with that id exists in the tables table;

--activate failpoint create_mv_2 -1;

create materialized view test_mv_2 as select * from test_source_1;
Failed to execute statement: PDB5000 - Internal error - reference: 1c5b49e8-5a77-4bf9-b5bf-ac7c36a536a7 please consult server logs for details

--deactivate failpoint create_mv_2 -1;
--restart cluster;

use test;
0 rows returned

-- MV should exist;
select * from test_mv_2 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 1                    | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 2                    | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 3                    | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 7                    | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 8                    | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 9                    | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 10                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
+---------------------------------------------------------------------------------------------------------------------+
10 rows returned

drop materialized view test_mv_2;
0 rows returned

-- trigger a failure when an MV been fill has been mainly processed but the temporary row used in tableExecutor.FillTo();
-- haven't been deleted from the to_delete table yet - the MV shouldn't exist on restart and all the data should be deleted;

--activate failpoint fill_to_1 2;

create materialized view test_mv_3 as select * from test_source_1;
Failed to execute statement: PDB5000 - Internal error - reference: acf2df27-ccd1-43cd-889c-900b46e5d9cf please consult server logs for details

--deactivate failpoint fill_to_1 2;
--restart cluster;

use test;
0 rows returned

-- MV shouldn't exist;
select * from test_mv_3;
Failed to execute statement: PDB1000 - Table 'test.test_mv_3' doesn't exist

drop source test_source_1;
0 rows returned
--delete topic testtopic;
