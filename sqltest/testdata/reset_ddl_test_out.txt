--create topic testtopic;
use test;
0 rows returned

-- first we check that reset ddl clears the ddl lock;

--get ddl lock;
Get lock returned: true
--set ddl lock timeout 2;

create source test_source_1(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp(6),
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    ),
    properties = (
        "prop1" = "val1",
        "prop2" = "val2"
    )
);
Failed to execute statement: PDB1012 - Timed out waiting to execute DDL on schema: test. Is there another DDL operation running?

reset ddl test;
0 rows returned

--set ddl lock timeout 30;

create source test_source_1(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp(6),
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    ),
    properties = (
        "prop1" = "val1",
        "prop2" = "val2"
    )
);
0 rows returned

--load data dataset_1;

select * from test_source_1 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 1                    | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 2                    | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 3                    | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 7                    | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 8                    | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 9                    | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 10                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
| 11                   | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 12                   | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 13                   | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 14                   | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 15                   | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 16                   | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 17                   | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 18                   | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 19                   | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 20                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
+---------------------------------------------------------------------------------------------------------------------+
20 rows returned

-- next we introduce a delay on loading initial state, then try and create another source with initial state = test_source_1;
-- this should go slow, then we cancel it, and it should return;

--activate interrupt initial_state;

--create topic testtopic2;

-- we execute reset ddl asynchronously after a short delay;
--async reset ddl test;

create source test_source_2(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp(6),
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic2",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    initialstate = "test_source_1",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    ),
    properties = (
        "prop1" = "val1",
        "prop2" = "val2"
    )
);
Failed to execute statement: PDB1013 - Loading initial state for table cancelled

select * from test_source_2 order by col0;
Failed to execute statement: PDB1000 - Table 'test.test_source_2' doesn't exist

--deactivate interrupt initial_state;

create source test_source_2(
    col0 bigint,
    col1 tinyint,
    col2 int,
    col3 double,
    col4 decimal(10, 2),
    col5 varchar,
    col6 timestamp(6),
    primary key (col0)
) with (
    brokername = "testbroker",
    topicname = "testtopic2",
    headerencoding = "json",
    keyencoding = "json",
    valueencoding = "json",
    initialstate = "test_source_1",
    columnselectors = (
        meta("key").k0,
        v1,
        v2,
        v3,
        v4,
        v5,
        v6
    ),
    properties = (
        "prop1" = "val1",
        "prop2" = "val2"
    )
);
0 rows returned

select * from test_source_2 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 1                    | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 2                    | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 3                    | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 7                    | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 8                    | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 9                    | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 10                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
| 11                   | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 12                   | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 13                   | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 14                   | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 15                   | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 16                   | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 17                   | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 18                   | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 19                   | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 20                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
+---------------------------------------------------------------------------------------------------------------------+
20 rows returned

-- Now try a slow materialized view initial state load and cancel it;

--activate interrupt initial_state;

--async reset ddl test;

create materialized view test_mv1 with(initialstate="test_source_2") as select * from test_source_2;
Failed to execute statement: PDB1013 - Loading initial state for table cancelled

select * from test_mv1 order by col0;
Failed to execute statement: PDB1000 - Table 'test.test_mv1' doesn't exist

--deactivate interrupt initial_state;

-- Now try a slow materialized view snapshot fill and cancel it;

--activate interrupt fill_snapshot;

--async reset ddl test;

create materialized view test_mv1 as select * from test_source_2;
Failed to execute statement: PDB1013 - Loading initial state cancelled

select * from test_mv1 order by col0;
Failed to execute statement: PDB1000 - Table 'test.test_mv1' doesn't exist

--deactivate interrupt fill_snapshot;

create materialized view test_mv1 as select * from test_source_2;
0 rows returned

select * from test_mv1 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 1                    | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 2                    | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 3                    | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 7                    | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 8                    | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 9                    | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 10                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
| 11                   | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 12                   | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 13                   | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 14                   | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 15                   | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 16                   | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 17                   | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 18                   | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 19                   | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 20                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
+---------------------------------------------------------------------------------------------------------------------+
20 rows returned

-- Now try a slow index snapshot fill and cancel it;

--activate interrupt fill_snapshot;

--async reset ddl test;

create index index_1 on test_mv1(col1);
Failed to execute statement: PDB1013 - Loading initial state cancelled

--deactivate interrupt fill_snapshot;

create index index_1 on test_mv1(col1);
0 rows returned

select * from test_mv1 order by col0;
+---------------------------------------------------------------------------------------------------------------------+
| col0                 | col1 | col2        | col3         | col4         | col5         | col6                       |
+---------------------------------------------------------------------------------------------------------------------+
| 1                    | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 2                    | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 3                    | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 4                    | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 5                    | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 6                    | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 7                    | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 8                    | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 9                    | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 10                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
| 11                   | 10   | 1000        | 1234.432100  | 12345678.99  | str1         | 2020-01-01 01:00:00.123456 |
| 12                   | 20   | 2000        | 2234.432100  | 22345678.99  | str2         | 2020-01-02 01:00:00.123456 |
| 13                   | 30   | 3000        | 3234.432100  | 32345678.99  | str3         | 2020-01-03 01:00:00.123456 |
| 14                   | 40   | 4000        | 4234.432100  | 42345678.99  | str4         | 2020-01-04 01:00:00.123456 |
| 15                   | 50   | 5000        | 5234.432100  | 52345678.99  | str5         | 2020-01-05 01:00:00.123456 |
| 16                   | 60   | 6000        | 6234.432100  | 62345678.99  | str6         | 2020-01-06 01:00:00.123456 |
| 17                   | 70   | 7000        | 7234.432100  | 72345678.99  | str7         | 2020-01-07 01:00:00.123456 |
| 18                   | 80   | 8000        | 8234.432100  | 82345678.99  | str8         | 2020-01-08 01:00:00.123456 |
| 19                   | 90   | 9000        | 9234.432100  | 92345678.99  | str9         | 2020-01-09 01:00:00.123456 |
| 20                   | 100  | 10000       | 10234.432100 | 93345678.99  | str10        | 2020-01-10 01:00:00.123456 |
+---------------------------------------------------------------------------------------------------------------------+
20 rows returned

drop index index_1 on test_mv1;
0 rows returned
drop materialized view test_mv1;
0 rows returned
drop source test_source_2;
0 rows returned
drop source test_source_1;
0 rows returned

--delete topic testtopic2;
--delete topic testtopic;
