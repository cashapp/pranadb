syntax = "proto3";

package squareup.cash.pranadb.service.v1;

import "google/protobuf/empty.proto";
import "google/protobuf/descriptor.proto";

option go_package = "github.com/squareup/pranadb/protos/squareup/cash/pranadb/v1/service";

enum ColumnType {
  COLUMN_TYPE_UNSPECIFIED = 0;
  COLUMN_TYPE_TINY_INT = 1;
  COLUMN_TYPE_INT = 2;
  COLUMN_TYPE_BIG_INT = 3;
  COLUMN_TYPE_DOUBLE = 4;
  COLUMN_TYPE_DECIMAL = 5;
  COLUMN_TYPE_VARCHAR = 6;
  COLUMN_TYPE_TIMESTAMP = 7;
}

message DecimalParams {
  uint32 decimal_precision = 1;
  uint32 decimal_scale = 2;
}

message TimestampParams {
  // 0 (default) = whole seconds. 6 = microseconds.
  uint32 fractional_seconds_precision = 1;
}

message Column {
  string name = 1;
  ColumnType type = 2;
  optional DecimalParams decimal_params = 3;
}

message ExecuteStatementRequest {
  string schema = 1;
  oneof statement {
    string name = 2;
    string sql = 3;
  }
  int32 batch_size = 4;
  repeated Arg args = 5;
}

message Arg {
  ColumnType type = 1;
  ArgValue value = 2;
  optional DecimalParams decimal_params = 3;
  optional TimestampParams timestamp_params = 4;
}

message ArgValue {
  oneof value {
    int64 int_value = 1;
    double float_value = 2;
    string string_value = 3;
    string decimal_value = 4;
    string timestamp_value = 5;
  }
}

// Column definitions sent prior to a set of Pages.
message Columns {
  repeated Column columns = 1;
}

message Row {
  repeated ColValue values = 1;
}

message ColValue {
  oneof value {
    bool is_null = 1;
    int64 int_value = 2;
    double float_value = 3;
    string string_value = 4;
  }
}

// Each query may return an arbitrary number of pages.
message Page {
  uint64 count = 1;
  repeated Row rows = 2;
}

message ExecuteStatementResponse {
  oneof result {
    Columns columns = 1; // Present in first response.
    Page page = 2;
  }
}

message RegisterProtobufsRequest {
  google.protobuf.FileDescriptorSet descriptors = 1;
}

service PranaDBService {
  rpc ExecuteStatement(ExecuteStatementRequest) returns (stream ExecuteStatementResponse);
  rpc RegisterProtobufs(RegisterProtobufsRequest) returns (google.protobuf.Empty);
}
